$date
	Fri Jan 14 20:33:46 2011
$end
$version
	ModelSim Version 6.5d
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$var integer 32 # i $end
$scope begin prog_load $end
$upscope $end
$scope begin in_load $end
$upscope $end
$scope module cpu $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 & pc [31] $end
$var wire 1 ' pc [30] $end
$var wire 1 ( pc [29] $end
$var wire 1 ) pc [28] $end
$var wire 1 * pc [27] $end
$var wire 1 + pc [26] $end
$var wire 1 , pc [25] $end
$var wire 1 - pc [24] $end
$var wire 1 . pc [23] $end
$var wire 1 / pc [22] $end
$var wire 1 0 pc [21] $end
$var wire 1 1 pc [20] $end
$var wire 1 2 pc [19] $end
$var wire 1 3 pc [18] $end
$var wire 1 4 pc [17] $end
$var wire 1 5 pc [16] $end
$var wire 1 6 pc [15] $end
$var wire 1 7 pc [14] $end
$var wire 1 8 pc [13] $end
$var wire 1 9 pc [12] $end
$var wire 1 : pc [11] $end
$var wire 1 ; pc [10] $end
$var wire 1 < pc [9] $end
$var wire 1 = pc [8] $end
$var wire 1 > pc [7] $end
$var wire 1 ? pc [6] $end
$var wire 1 @ pc [5] $end
$var wire 1 A pc [4] $end
$var wire 1 B pc [3] $end
$var wire 1 C pc [2] $end
$var wire 1 D pc [1] $end
$var wire 1 E pc [0] $end
$var wire 1 F inst_in [31] $end
$var wire 1 G inst_in [30] $end
$var wire 1 H inst_in [29] $end
$var wire 1 I inst_in [28] $end
$var wire 1 J inst_in [27] $end
$var wire 1 K inst_in [26] $end
$var wire 1 L inst_in [25] $end
$var wire 1 M inst_in [24] $end
$var wire 1 N inst_in [23] $end
$var wire 1 O inst_in [22] $end
$var wire 1 P inst_in [21] $end
$var wire 1 Q inst_in [20] $end
$var wire 1 R inst_in [19] $end
$var wire 1 S inst_in [18] $end
$var wire 1 T inst_in [17] $end
$var wire 1 U inst_in [16] $end
$var wire 1 V inst_in [15] $end
$var wire 1 W inst_in [14] $end
$var wire 1 X inst_in [13] $end
$var wire 1 Y inst_in [12] $end
$var wire 1 Z inst_in [11] $end
$var wire 1 [ inst_in [10] $end
$var wire 1 \ inst_in [9] $end
$var wire 1 ] inst_in [8] $end
$var wire 1 ^ inst_in [7] $end
$var wire 1 _ inst_in [6] $end
$var wire 1 ` inst_in [5] $end
$var wire 1 a inst_in [4] $end
$var wire 1 b inst_in [3] $end
$var wire 1 c inst_in [2] $end
$var wire 1 d inst_in [1] $end
$var wire 1 e inst_in [0] $end
$var wire 1 f next_pc_out [31] $end
$var wire 1 g next_pc_out [30] $end
$var wire 1 h next_pc_out [29] $end
$var wire 1 i next_pc_out [28] $end
$var wire 1 j next_pc_out [27] $end
$var wire 1 k next_pc_out [26] $end
$var wire 1 l next_pc_out [25] $end
$var wire 1 m next_pc_out [24] $end
$var wire 1 n next_pc_out [23] $end
$var wire 1 o next_pc_out [22] $end
$var wire 1 p next_pc_out [21] $end
$var wire 1 q next_pc_out [20] $end
$var wire 1 r next_pc_out [19] $end
$var wire 1 s next_pc_out [18] $end
$var wire 1 t next_pc_out [17] $end
$var wire 1 u next_pc_out [16] $end
$var wire 1 v next_pc_out [15] $end
$var wire 1 w next_pc_out [14] $end
$var wire 1 x next_pc_out [13] $end
$var wire 1 y next_pc_out [12] $end
$var wire 1 z next_pc_out [11] $end
$var wire 1 { next_pc_out [10] $end
$var wire 1 | next_pc_out [9] $end
$var wire 1 } next_pc_out [8] $end
$var wire 1 ~ next_pc_out [7] $end
$var wire 1 !! next_pc_out [6] $end
$var wire 1 "! next_pc_out [5] $end
$var wire 1 #! next_pc_out [4] $end
$var wire 1 $! next_pc_out [3] $end
$var wire 1 %! next_pc_out [2] $end
$var wire 1 &! next_pc_out [1] $end
$var wire 1 '! next_pc_out [0] $end
$var wire 1 (! inst_out [31] $end
$var wire 1 )! inst_out [30] $end
$var wire 1 *! inst_out [29] $end
$var wire 1 +! inst_out [28] $end
$var wire 1 ,! inst_out [27] $end
$var wire 1 -! inst_out [26] $end
$var wire 1 .! inst_out [25] $end
$var wire 1 /! inst_out [24] $end
$var wire 1 0! inst_out [23] $end
$var wire 1 1! inst_out [22] $end
$var wire 1 2! inst_out [21] $end
$var wire 1 3! inst_out [20] $end
$var wire 1 4! inst_out [19] $end
$var wire 1 5! inst_out [18] $end
$var wire 1 6! inst_out [17] $end
$var wire 1 7! inst_out [16] $end
$var wire 1 8! inst_out [15] $end
$var wire 1 9! inst_out [14] $end
$var wire 1 :! inst_out [13] $end
$var wire 1 ;! inst_out [12] $end
$var wire 1 <! inst_out [11] $end
$var wire 1 =! inst_out [10] $end
$var wire 1 >! inst_out [9] $end
$var wire 1 ?! inst_out [8] $end
$var wire 1 @! inst_out [7] $end
$var wire 1 A! inst_out [6] $end
$var wire 1 B! inst_out [5] $end
$var wire 1 C! inst_out [4] $end
$var wire 1 D! inst_out [3] $end
$var wire 1 E! inst_out [2] $end
$var wire 1 F! inst_out [1] $end
$var wire 1 G! inst_out [0] $end
$var wire 1 H! datarw $end
$var wire 1 I! dataena $end
$var wire 1 J! opcode [5] $end
$var wire 1 K! opcode [4] $end
$var wire 1 L! opcode [3] $end
$var wire 1 M! opcode [2] $end
$var wire 1 N! opcode [1] $end
$var wire 1 O! opcode [0] $end
$var wire 1 P! datarw_out $end
$var wire 1 Q! dataena_out $end
$var wire 1 R! datarw_out2 $end
$var wire 1 S! dataena_out2 $end
$var wire 1 T! address [19] $end
$var wire 1 U! address [18] $end
$var wire 1 V! address [17] $end
$var wire 1 W! address [16] $end
$var wire 1 X! address [15] $end
$var wire 1 Y! address [14] $end
$var wire 1 Z! address [13] $end
$var wire 1 [! address [12] $end
$var wire 1 \! address [11] $end
$var wire 1 ]! address [10] $end
$var wire 1 ^! address [9] $end
$var wire 1 _! address [8] $end
$var wire 1 `! address [7] $end
$var wire 1 a! address [6] $end
$var wire 1 b! address [5] $end
$var wire 1 c! address [4] $end
$var wire 1 d! address [3] $end
$var wire 1 e! address [2] $end
$var wire 1 f! address [1] $end
$var wire 1 g! address [0] $end
$var wire 1 h! address_out [19] $end
$var wire 1 i! address_out [18] $end
$var wire 1 j! address_out [17] $end
$var wire 1 k! address_out [16] $end
$var wire 1 l! address_out [15] $end
$var wire 1 m! address_out [14] $end
$var wire 1 n! address_out [13] $end
$var wire 1 o! address_out [12] $end
$var wire 1 p! address_out [11] $end
$var wire 1 q! address_out [10] $end
$var wire 1 r! address_out [9] $end
$var wire 1 s! address_out [8] $end
$var wire 1 t! address_out [7] $end
$var wire 1 u! address_out [6] $end
$var wire 1 v! address_out [5] $end
$var wire 1 w! address_out [4] $end
$var wire 1 x! address_out [3] $end
$var wire 1 y! address_out [2] $end
$var wire 1 z! address_out [1] $end
$var wire 1 {! address_out [0] $end
$var wire 1 |! address_out2 [19] $end
$var wire 1 }! address_out2 [18] $end
$var wire 1 ~! address_out2 [17] $end
$var wire 1 !" address_out2 [16] $end
$var wire 1 "" address_out2 [15] $end
$var wire 1 #" address_out2 [14] $end
$var wire 1 $" address_out2 [13] $end
$var wire 1 %" address_out2 [12] $end
$var wire 1 &" address_out2 [11] $end
$var wire 1 '" address_out2 [10] $end
$var wire 1 (" address_out2 [9] $end
$var wire 1 )" address_out2 [8] $end
$var wire 1 *" address_out2 [7] $end
$var wire 1 +" address_out2 [6] $end
$var wire 1 ," address_out2 [5] $end
$var wire 1 -" address_out2 [4] $end
$var wire 1 ." address_out2 [3] $end
$var wire 1 /" address_out2 [2] $end
$var wire 1 0" address_out2 [1] $end
$var wire 1 1" address_out2 [0] $end
$var wire 1 2" data_out [31] $end
$var wire 1 3" data_out [30] $end
$var wire 1 4" data_out [29] $end
$var wire 1 5" data_out [28] $end
$var wire 1 6" data_out [27] $end
$var wire 1 7" data_out [26] $end
$var wire 1 8" data_out [25] $end
$var wire 1 9" data_out [24] $end
$var wire 1 :" data_out [23] $end
$var wire 1 ;" data_out [22] $end
$var wire 1 <" data_out [21] $end
$var wire 1 =" data_out [20] $end
$var wire 1 >" data_out [19] $end
$var wire 1 ?" data_out [18] $end
$var wire 1 @" data_out [17] $end
$var wire 1 A" data_out [16] $end
$var wire 1 B" data_out [15] $end
$var wire 1 C" data_out [14] $end
$var wire 1 D" data_out [13] $end
$var wire 1 E" data_out [12] $end
$var wire 1 F" data_out [11] $end
$var wire 1 G" data_out [10] $end
$var wire 1 H" data_out [9] $end
$var wire 1 I" data_out [8] $end
$var wire 1 J" data_out [7] $end
$var wire 1 K" data_out [6] $end
$var wire 1 L" data_out [5] $end
$var wire 1 M" data_out [4] $end
$var wire 1 N" data_out [3] $end
$var wire 1 O" data_out [2] $end
$var wire 1 P" data_out [1] $end
$var wire 1 Q" data_out [0] $end
$var wire 1 R" out [31] $end
$var wire 1 S" out [30] $end
$var wire 1 T" out [29] $end
$var wire 1 U" out [28] $end
$var wire 1 V" out [27] $end
$var wire 1 W" out [26] $end
$var wire 1 X" out [25] $end
$var wire 1 Y" out [24] $end
$var wire 1 Z" out [23] $end
$var wire 1 [" out [22] $end
$var wire 1 \" out [21] $end
$var wire 1 ]" out [20] $end
$var wire 1 ^" out [19] $end
$var wire 1 _" out [18] $end
$var wire 1 `" out [17] $end
$var wire 1 a" out [16] $end
$var wire 1 b" out [15] $end
$var wire 1 c" out [14] $end
$var wire 1 d" out [13] $end
$var wire 1 e" out [12] $end
$var wire 1 f" out [11] $end
$var wire 1 g" out [10] $end
$var wire 1 h" out [9] $end
$var wire 1 i" out [8] $end
$var wire 1 j" out [7] $end
$var wire 1 k" out [6] $end
$var wire 1 l" out [5] $end
$var wire 1 m" out [4] $end
$var wire 1 n" out [3] $end
$var wire 1 o" out [2] $end
$var wire 1 p" out [1] $end
$var wire 1 q" out [0] $end
$var reg 32 r" next_pc [31:0] $end
$var wire 1 s" subopcode $end
$scope module inst_mem $end
$var parameter 32 t" IM_SIZE $end
$var wire 1 $ clk $end
$var wire 1 u" pc [31] $end
$var wire 1 v" pc [30] $end
$var wire 1 w" pc [29] $end
$var wire 1 x" pc [28] $end
$var wire 1 y" pc [27] $end
$var wire 1 z" pc [26] $end
$var wire 1 {" pc [25] $end
$var wire 1 |" pc [24] $end
$var wire 1 }" pc [23] $end
$var wire 1 ~" pc [22] $end
$var wire 1 !# pc [21] $end
$var wire 1 "# pc [20] $end
$var wire 1 ## pc [19] $end
$var wire 1 $# pc [18] $end
$var wire 1 %# pc [17] $end
$var wire 1 &# pc [16] $end
$var wire 1 '# pc [15] $end
$var wire 1 (# pc [14] $end
$var wire 1 )# pc [13] $end
$var wire 1 *# pc [12] $end
$var wire 1 +# pc [11] $end
$var wire 1 ,# pc [10] $end
$var wire 1 -# pc [9] $end
$var wire 1 .# pc [8] $end
$var wire 1 /# pc [7] $end
$var wire 1 0# pc [6] $end
$var wire 1 1# pc [5] $end
$var wire 1 2# pc [4] $end
$var wire 1 3# pc [3] $end
$var wire 1 4# pc [2] $end
$var wire 1 5# pc [1] $end
$var wire 1 6# pc [0] $end
$var wire 1 F inst_out [31] $end
$var wire 1 G inst_out [30] $end
$var wire 1 H inst_out [29] $end
$var wire 1 I inst_out [28] $end
$var wire 1 J inst_out [27] $end
$var wire 1 K inst_out [26] $end
$var wire 1 L inst_out [25] $end
$var wire 1 M inst_out [24] $end
$var wire 1 N inst_out [23] $end
$var wire 1 O inst_out [22] $end
$var wire 1 P inst_out [21] $end
$var wire 1 Q inst_out [20] $end
$var wire 1 R inst_out [19] $end
$var wire 1 S inst_out [18] $end
$var wire 1 T inst_out [17] $end
$var wire 1 U inst_out [16] $end
$var wire 1 V inst_out [15] $end
$var wire 1 W inst_out [14] $end
$var wire 1 X inst_out [13] $end
$var wire 1 Y inst_out [12] $end
$var wire 1 Z inst_out [11] $end
$var wire 1 [ inst_out [10] $end
$var wire 1 \ inst_out [9] $end
$var wire 1 ] inst_out [8] $end
$var wire 1 ^ inst_out [7] $end
$var wire 1 _ inst_out [6] $end
$var wire 1 ` inst_out [5] $end
$var wire 1 a inst_out [4] $end
$var wire 1 b inst_out [3] $end
$var wire 1 c inst_out [2] $end
$var wire 1 d inst_out [1] $end
$var wire 1 e inst_out [0] $end
$upscope $end
$scope module ifid $end
$var wire 1 7# pc_in [31] $end
$var wire 1 8# pc_in [30] $end
$var wire 1 9# pc_in [29] $end
$var wire 1 :# pc_in [28] $end
$var wire 1 ;# pc_in [27] $end
$var wire 1 <# pc_in [26] $end
$var wire 1 =# pc_in [25] $end
$var wire 1 ># pc_in [24] $end
$var wire 1 ?# pc_in [23] $end
$var wire 1 @# pc_in [22] $end
$var wire 1 A# pc_in [21] $end
$var wire 1 B# pc_in [20] $end
$var wire 1 C# pc_in [19] $end
$var wire 1 D# pc_in [18] $end
$var wire 1 E# pc_in [17] $end
$var wire 1 F# pc_in [16] $end
$var wire 1 G# pc_in [15] $end
$var wire 1 H# pc_in [14] $end
$var wire 1 I# pc_in [13] $end
$var wire 1 J# pc_in [12] $end
$var wire 1 K# pc_in [11] $end
$var wire 1 L# pc_in [10] $end
$var wire 1 M# pc_in [9] $end
$var wire 1 N# pc_in [8] $end
$var wire 1 O# pc_in [7] $end
$var wire 1 P# pc_in [6] $end
$var wire 1 Q# pc_in [5] $end
$var wire 1 R# pc_in [4] $end
$var wire 1 S# pc_in [3] $end
$var wire 1 T# pc_in [2] $end
$var wire 1 U# pc_in [1] $end
$var wire 1 V# pc_in [0] $end
$var wire 1 F inst_in [31] $end
$var wire 1 G inst_in [30] $end
$var wire 1 H inst_in [29] $end
$var wire 1 I inst_in [28] $end
$var wire 1 J inst_in [27] $end
$var wire 1 K inst_in [26] $end
$var wire 1 L inst_in [25] $end
$var wire 1 M inst_in [24] $end
$var wire 1 N inst_in [23] $end
$var wire 1 O inst_in [22] $end
$var wire 1 P inst_in [21] $end
$var wire 1 Q inst_in [20] $end
$var wire 1 R inst_in [19] $end
$var wire 1 S inst_in [18] $end
$var wire 1 T inst_in [17] $end
$var wire 1 U inst_in [16] $end
$var wire 1 V inst_in [15] $end
$var wire 1 W inst_in [14] $end
$var wire 1 X inst_in [13] $end
$var wire 1 Y inst_in [12] $end
$var wire 1 Z inst_in [11] $end
$var wire 1 [ inst_in [10] $end
$var wire 1 \ inst_in [9] $end
$var wire 1 ] inst_in [8] $end
$var wire 1 ^ inst_in [7] $end
$var wire 1 _ inst_in [6] $end
$var wire 1 ` inst_in [5] $end
$var wire 1 a inst_in [4] $end
$var wire 1 b inst_in [3] $end
$var wire 1 c inst_in [2] $end
$var wire 1 d inst_in [1] $end
$var wire 1 e inst_in [0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var reg 32 W# pc_out [31:0] $end
$var reg 32 X# inst_out [31:0] $end
$upscope $end
$scope module decoder $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 J! opcode [5] $end
$var wire 1 K! opcode [4] $end
$var wire 1 L! opcode [3] $end
$var wire 1 M! opcode [2] $end
$var wire 1 N! opcode [1] $end
$var wire 1 O! opcode [0] $end
$var reg 1 Y# datarw $end
$var reg 1 Z# dataena $end
$upscope $end
$scope module idex $end
$var wire 1 T! address_in [19] $end
$var wire 1 U! address_in [18] $end
$var wire 1 V! address_in [17] $end
$var wire 1 W! address_in [16] $end
$var wire 1 X! address_in [15] $end
$var wire 1 Y! address_in [14] $end
$var wire 1 Z! address_in [13] $end
$var wire 1 [! address_in [12] $end
$var wire 1 \! address_in [11] $end
$var wire 1 ]! address_in [10] $end
$var wire 1 ^! address_in [9] $end
$var wire 1 _! address_in [8] $end
$var wire 1 `! address_in [7] $end
$var wire 1 a! address_in [6] $end
$var wire 1 b! address_in [5] $end
$var wire 1 c! address_in [4] $end
$var wire 1 d! address_in [3] $end
$var wire 1 e! address_in [2] $end
$var wire 1 f! address_in [1] $end
$var wire 1 g! address_in [0] $end
$var wire 1 H! datarw_in $end
$var wire 1 I! dataena_in $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var reg 20 [# address_out [19:0] $end
$var reg 1 \# datarw_out $end
$var reg 1 ]# dataena_out $end
$upscope $end
$scope module exmem $end
$var wire 1 h! address_in [19] $end
$var wire 1 i! address_in [18] $end
$var wire 1 j! address_in [17] $end
$var wire 1 k! address_in [16] $end
$var wire 1 l! address_in [15] $end
$var wire 1 m! address_in [14] $end
$var wire 1 n! address_in [13] $end
$var wire 1 o! address_in [12] $end
$var wire 1 p! address_in [11] $end
$var wire 1 q! address_in [10] $end
$var wire 1 r! address_in [9] $end
$var wire 1 s! address_in [8] $end
$var wire 1 t! address_in [7] $end
$var wire 1 u! address_in [6] $end
$var wire 1 v! address_in [5] $end
$var wire 1 w! address_in [4] $end
$var wire 1 x! address_in [3] $end
$var wire 1 y! address_in [2] $end
$var wire 1 z! address_in [1] $end
$var wire 1 {! address_in [0] $end
$var wire 1 P! datarw_in $end
$var wire 1 Q! dataena_in $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var reg 20 ^# address_out [19:0] $end
$var reg 1 _# datarw_out $end
$var reg 1 `# dataena_out $end
$upscope $end
$scope module data_mem $end
$var parameter 32 a# data_size $end
$var parameter 32 b# addr_size $end
$var parameter 32 c# mem_width $end
$var parameter 32 d# mem_size $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var wire 1 R! data_rw $end
$var wire 1 S! ena_data $end
$var wire 1 e# addr [31] $end
$var wire 1 f# addr [30] $end
$var wire 1 g# addr [29] $end
$var wire 1 h# addr [28] $end
$var wire 1 i# addr [27] $end
$var wire 1 j# addr [26] $end
$var wire 1 k# addr [25] $end
$var wire 1 l# addr [24] $end
$var wire 1 m# addr [23] $end
$var wire 1 n# addr [22] $end
$var wire 1 o# addr [21] $end
$var wire 1 p# addr [20] $end
$var wire 1 |! addr [19] $end
$var wire 1 }! addr [18] $end
$var wire 1 ~! addr [17] $end
$var wire 1 !" addr [16] $end
$var wire 1 "" addr [15] $end
$var wire 1 #" addr [14] $end
$var wire 1 $" addr [13] $end
$var wire 1 %" addr [12] $end
$var wire 1 &" addr [11] $end
$var wire 1 '" addr [10] $end
$var wire 1 (" addr [9] $end
$var wire 1 )" addr [8] $end
$var wire 1 *" addr [7] $end
$var wire 1 +" addr [6] $end
$var wire 1 ," addr [5] $end
$var wire 1 -" addr [4] $end
$var wire 1 ." addr [3] $end
$var wire 1 /" addr [2] $end
$var wire 1 0" addr [1] $end
$var wire 1 1" addr [0] $end
$var wire 1 q# data_in [31] $end
$var wire 1 r# data_in [30] $end
$var wire 1 s# data_in [29] $end
$var wire 1 t# data_in [28] $end
$var wire 1 u# data_in [27] $end
$var wire 1 v# data_in [26] $end
$var wire 1 w# data_in [25] $end
$var wire 1 x# data_in [24] $end
$var wire 1 y# data_in [23] $end
$var wire 1 z# data_in [22] $end
$var wire 1 {# data_in [21] $end
$var wire 1 |# data_in [20] $end
$var wire 1 }# data_in [19] $end
$var wire 1 ~# data_in [18] $end
$var wire 1 !$ data_in [17] $end
$var wire 1 "$ data_in [16] $end
$var wire 1 #$ data_in [15] $end
$var wire 1 $$ data_in [14] $end
$var wire 1 %$ data_in [13] $end
$var wire 1 &$ data_in [12] $end
$var wire 1 '$ data_in [11] $end
$var wire 1 ($ data_in [10] $end
$var wire 1 )$ data_in [9] $end
$var wire 1 *$ data_in [8] $end
$var wire 1 +$ data_in [7] $end
$var wire 1 ,$ data_in [6] $end
$var wire 1 -$ data_in [5] $end
$var wire 1 .$ data_in [4] $end
$var wire 1 /$ data_in [3] $end
$var wire 1 0$ data_in [2] $end
$var wire 1 1$ data_in [1] $end
$var wire 1 2$ data_in [0] $end
$var wire 1 2" data_out [31] $end
$var wire 1 3" data_out [30] $end
$var wire 1 4" data_out [29] $end
$var wire 1 5" data_out [28] $end
$var wire 1 6" data_out [27] $end
$var wire 1 7" data_out [26] $end
$var wire 1 8" data_out [25] $end
$var wire 1 9" data_out [24] $end
$var wire 1 :" data_out [23] $end
$var wire 1 ;" data_out [22] $end
$var wire 1 <" data_out [21] $end
$var wire 1 =" data_out [20] $end
$var wire 1 >" data_out [19] $end
$var wire 1 ?" data_out [18] $end
$var wire 1 @" data_out [17] $end
$var wire 1 A" data_out [16] $end
$var wire 1 B" data_out [15] $end
$var wire 1 C" data_out [14] $end
$var wire 1 D" data_out [13] $end
$var wire 1 E" data_out [12] $end
$var wire 1 F" data_out [11] $end
$var wire 1 G" data_out [10] $end
$var wire 1 H" data_out [9] $end
$var wire 1 I" data_out [8] $end
$var wire 1 J" data_out [7] $end
$var wire 1 K" data_out [6] $end
$var wire 1 L" data_out [5] $end
$var wire 1 M" data_out [4] $end
$var wire 1 N" data_out [3] $end
$var wire 1 O" data_out [2] $end
$var wire 1 P" data_out [1] $end
$var wire 1 Q" data_out [0] $end
$var integer 32 3$ i $end
$upscope $end
$scope module memwb $end
$var wire 1 2" data_in [31] $end
$var wire 1 3" data_in [30] $end
$var wire 1 4" data_in [29] $end
$var wire 1 5" data_in [28] $end
$var wire 1 6" data_in [27] $end
$var wire 1 7" data_in [26] $end
$var wire 1 8" data_in [25] $end
$var wire 1 9" data_in [24] $end
$var wire 1 :" data_in [23] $end
$var wire 1 ;" data_in [22] $end
$var wire 1 <" data_in [21] $end
$var wire 1 =" data_in [20] $end
$var wire 1 >" data_in [19] $end
$var wire 1 ?" data_in [18] $end
$var wire 1 @" data_in [17] $end
$var wire 1 A" data_in [16] $end
$var wire 1 B" data_in [15] $end
$var wire 1 C" data_in [14] $end
$var wire 1 D" data_in [13] $end
$var wire 1 E" data_in [12] $end
$var wire 1 F" data_in [11] $end
$var wire 1 G" data_in [10] $end
$var wire 1 H" data_in [9] $end
$var wire 1 I" data_in [8] $end
$var wire 1 J" data_in [7] $end
$var wire 1 K" data_in [6] $end
$var wire 1 L" data_in [5] $end
$var wire 1 M" data_in [4] $end
$var wire 1 N" data_in [3] $end
$var wire 1 O" data_in [2] $end
$var wire 1 P" data_in [1] $end
$var wire 1 Q" data_in [0] $end
$var wire 1 $ clk $end
$var wire 1 % rst $end
$var reg 32 4$ data_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1100100 t"
b100000 a#
b100000 b#
b1000 c#
b100000000 d#
0!
0"
bx r"
bx W#
bx X#
xY#
xZ#
bx [#
x\#
x]#
bx ^#
x_#
x`#
bx 3$
bx 4$
bx #
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xs"
0%
0$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
0v"
0u"
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xf
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
xH!
xI!
xO!
xN!
xM!
xL!
xK!
xJ!
xP!
xQ!
xR!
xS!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
x1"
x0"
x/"
x."
$end
#1000
1!
1$
#2000
1"
0!
1%
0$
b0 r"
0\#
0]#
b0 [#
0_#
0`#
b0 ^#
b0 3$
b1 3$
b10 3$
b11 3$
b100 3$
b101 3$
b110 3$
b111 3$
b1000 3$
b1001 3$
b1010 3$
b1011 3$
b1100 3$
b1101 3$
b1110 3$
b1111 3$
b10000 3$
b10001 3$
b10010 3$
b10011 3$
b10100 3$
b10101 3$
b10110 3$
b10111 3$
b11000 3$
b11001 3$
b11010 3$
b11011 3$
b11100 3$
b11101 3$
b11110 3$
b11111 3$
b100000 3$
b100001 3$
b100010 3$
b100011 3$
b100100 3$
b100101 3$
b100110 3$
b100111 3$
b101000 3$
b101001 3$
b101010 3$
b101011 3$
b101100 3$
b101101 3$
b101110 3$
b101111 3$
b110000 3$
b110001 3$
b110010 3$
b110011 3$
b110100 3$
b110101 3$
b110110 3$
b110111 3$
b111000 3$
b111001 3$
b111010 3$
b111011 3$
b111100 3$
b111101 3$
b111110 3$
b111111 3$
b1000000 3$
b1000001 3$
b1000010 3$
b1000011 3$
b1000100 3$
b1000101 3$
b1000110 3$
b1000111 3$
b1001000 3$
b1001001 3$
b1001010 3$
b1001011 3$
b1001100 3$
b1001101 3$
b1001110 3$
b1001111 3$
b1010000 3$
b1010001 3$
b1010010 3$
b1010011 3$
b1010100 3$
b1010101 3$
b1010110 3$
b1010111 3$
b1011000 3$
b1011001 3$
b1011010 3$
b1011011 3$
b1011100 3$
b1011101 3$
b1011110 3$
b1011111 3$
b1100000 3$
b1100001 3$
b1100010 3$
b1100011 3$
b1100100 3$
b1100101 3$
b1100110 3$
b1100111 3$
b1101000 3$
b1101001 3$
b1101010 3$
b1101011 3$
b1101100 3$
b1101101 3$
b1101110 3$
b1101111 3$
b1110000 3$
b1110001 3$
b1110010 3$
b1110011 3$
b1110100 3$
b1110101 3$
b1110110 3$
b1110111 3$
b1111000 3$
b1111001 3$
b1111010 3$
b1111011 3$
b1111100 3$
b1111101 3$
b1111110 3$
b1111111 3$
b10000000 3$
b10000001 3$
b10000010 3$
b10000011 3$
b10000100 3$
b10000101 3$
b10000110 3$
b10000111 3$
b10001000 3$
b10001001 3$
b10001010 3$
b10001011 3$
b10001100 3$
b10001101 3$
b10001110 3$
b10001111 3$
b10010000 3$
b10010001 3$
b10010010 3$
b10010011 3$
b10010100 3$
b10010101 3$
b10010110 3$
b10010111 3$
b10011000 3$
b10011001 3$
b10011010 3$
b10011011 3$
b10011100 3$
b10011101 3$
b10011110 3$
b10011111 3$
b10100000 3$
b10100001 3$
b10100010 3$
b10100011 3$
b10100100 3$
b10100101 3$
b10100110 3$
b10100111 3$
b10101000 3$
b10101001 3$
b10101010 3$
b10101011 3$
b10101100 3$
b10101101 3$
b10101110 3$
b10101111 3$
b10110000 3$
b10110001 3$
b10110010 3$
b10110011 3$
b10110100 3$
b10110101 3$
b10110110 3$
b10110111 3$
b10111000 3$
b10111001 3$
b10111010 3$
b10111011 3$
b10111100 3$
b10111101 3$
b10111110 3$
b10111111 3$
b11000000 3$
b11000001 3$
b11000010 3$
b11000011 3$
b11000100 3$
b11000101 3$
b11000110 3$
b11000111 3$
b11001000 3$
b11001001 3$
b11001010 3$
b11001011 3$
b11001100 3$
b11001101 3$
b11001110 3$
b11001111 3$
b11010000 3$
b11010001 3$
b11010010 3$
b11010011 3$
b11010100 3$
b11010101 3$
b11010110 3$
b11010111 3$
b11011000 3$
b11011001 3$
b11011010 3$
b11011011 3$
b11011100 3$
b11011101 3$
b11011110 3$
b11011111 3$
b11100000 3$
b11100001 3$
b11100010 3$
b11100011 3$
b11100100 3$
b11100101 3$
b11100110 3$
b11100111 3$
b11101000 3$
b11101001 3$
b11101010 3$
b11101011 3$
b11101100 3$
b11101101 3$
b11101110 3$
b11101111 3$
b11110000 3$
b11110001 3$
b11110010 3$
b11110011 3$
b11110100 3$
b11110101 3$
b11110110 3$
b11110111 3$
b11111000 3$
b11111001 3$
b11111010 3$
b11111011 3$
b11111100 3$
b11111101 3$
b11111110 3$
b11111111 3$
b100000000 3$
b0 4$
0P!
0Q!
0R!
0S!
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0E
0D
1C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
1L
1K
1J
1I
1H
1G
0F
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
b0 W#
b0 X#
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0s"
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0O!
0N!
0M!
0L!
0K!
0J!
0Y#
0Z#
0H!
0I!
#3000
1!
1$
b0 3$
b1 3$
b10 3$
b11 3$
b100 3$
b101 3$
b110 3$
b111 3$
b1000 3$
b1001 3$
b1010 3$
b1011 3$
b1100 3$
b1101 3$
b1110 3$
b1111 3$
b10000 3$
b10001 3$
b10010 3$
b10011 3$
b10100 3$
b10101 3$
b10110 3$
b10111 3$
b11000 3$
b11001 3$
b11010 3$
b11011 3$
b11100 3$
b11101 3$
b11110 3$
b11111 3$
b100000 3$
b100001 3$
b100010 3$
b100011 3$
b100100 3$
b100101 3$
b100110 3$
b100111 3$
b101000 3$
b101001 3$
b101010 3$
b101011 3$
b101100 3$
b101101 3$
b101110 3$
b101111 3$
b110000 3$
b110001 3$
b110010 3$
b110011 3$
b110100 3$
b110101 3$
b110110 3$
b110111 3$
b111000 3$
b111001 3$
b111010 3$
b111011 3$
b111100 3$
b111101 3$
b111110 3$
b111111 3$
b1000000 3$
b1000001 3$
b1000010 3$
b1000011 3$
b1000100 3$
b1000101 3$
b1000110 3$
b1000111 3$
b1001000 3$
b1001001 3$
b1001010 3$
b1001011 3$
b1001100 3$
b1001101 3$
b1001110 3$
b1001111 3$
b1010000 3$
b1010001 3$
b1010010 3$
b1010011 3$
b1010100 3$
b1010101 3$
b1010110 3$
b1010111 3$
b1011000 3$
b1011001 3$
b1011010 3$
b1011011 3$
b1011100 3$
b1011101 3$
b1011110 3$
b1011111 3$
b1100000 3$
b1100001 3$
b1100010 3$
b1100011 3$
b1100100 3$
b1100101 3$
b1100110 3$
b1100111 3$
b1101000 3$
b1101001 3$
b1101010 3$
b1101011 3$
b1101100 3$
b1101101 3$
b1101110 3$
b1101111 3$
b1110000 3$
b1110001 3$
b1110010 3$
b1110011 3$
b1110100 3$
b1110101 3$
b1110110 3$
b1110111 3$
b1111000 3$
b1111001 3$
b1111010 3$
b1111011 3$
b1111100 3$
b1111101 3$
b1111110 3$
b1111111 3$
b10000000 3$
b10000001 3$
b10000010 3$
b10000011 3$
b10000100 3$
b10000101 3$
b10000110 3$
b10000111 3$
b10001000 3$
b10001001 3$
b10001010 3$
b10001011 3$
b10001100 3$
b10001101 3$
b10001110 3$
b10001111 3$
b10010000 3$
b10010001 3$
b10010010 3$
b10010011 3$
b10010100 3$
b10010101 3$
b10010110 3$
b10010111 3$
b10011000 3$
b10011001 3$
b10011010 3$
b10011011 3$
b10011100 3$
b10011101 3$
b10011110 3$
b10011111 3$
b10100000 3$
b10100001 3$
b10100010 3$
b10100011 3$
b10100100 3$
b10100101 3$
b10100110 3$
b10100111 3$
b10101000 3$
b10101001 3$
b10101010 3$
b10101011 3$
b10101100 3$
b10101101 3$
b10101110 3$
b10101111 3$
b10110000 3$
b10110001 3$
b10110010 3$
b10110011 3$
b10110100 3$
b10110101 3$
b10110110 3$
b10110111 3$
b10111000 3$
b10111001 3$
b10111010 3$
b10111011 3$
b10111100 3$
b10111101 3$
b10111110 3$
b10111111 3$
b11000000 3$
b11000001 3$
b11000010 3$
b11000011 3$
b11000100 3$
b11000101 3$
b11000110 3$
b11000111 3$
b11001000 3$
b11001001 3$
b11001010 3$
b11001011 3$
b11001100 3$
b11001101 3$
b11001110 3$
b11001111 3$
b11010000 3$
b11010001 3$
b11010010 3$
b11010011 3$
b11010100 3$
b11010101 3$
b11010110 3$
b11010111 3$
b11011000 3$
b11011001 3$
b11011010 3$
b11011011 3$
b11011100 3$
b11011101 3$
b11011110 3$
b11011111 3$
b11100000 3$
b11100001 3$
b11100010 3$
b11100011 3$
b11100100 3$
b11100101 3$
b11100110 3$
b11100111 3$
b11101000 3$
b11101001 3$
b11101010 3$
b11101011 3$
b11101100 3$
b11101101 3$
b11101110 3$
b11101111 3$
b11110000 3$
b11110001 3$
b11110010 3$
b11110011 3$
b11110100 3$
b11110101 3$
b11110110 3$
b11110111 3$
b11111000 3$
b11111001 3$
b11111010 3$
b11111011 3$
b11111100 3$
b11111101 3$
b11111110 3$
b11111111 3$
b100000000 3$
#4000
0"
0!
0%
0$
#5000
1!
1$
b100 r"
1T#
16#
0C
1B
1^
b1111110000000000000000000000000 X#
1.!
1-!
1,!
1+!
1*!
1)!
1O!
1N!
1M!
1L!
1K!
1J!
1Z#
1I!
#6000
0!
0$
#7000
1!
1$
1]#
b1000 r"
1Q!
0T#
1S#
06#
15#
1C
0^
1]
b100 W#
b1111110000000000000000010000000 X#
1@!
1%!
1e!
#8000
0!
0$
#9000
1!
1$
1`#
b1100 r"
b100 [#
1S!
1y!
1T#
16#
0C
0B
1A
1^
1P"
1K"
1J"
1I"
1G"
1F"
1E"
1D"
1B"
1A"
1@"
1?"
1="
1<"
1:"
17"
15"
14"
12"
b1000 W#
b1111110000000000000000100000000 X#
0@!
1?!
0%!
1$!
0e!
1d!
#10000
0!
0$
#11000
1!
1$
b10110100101101111011110111000010 4$
b1000 [#
b10000 r"
b100 ^#
1/"
0T#
0S#
1R#
06#
05#
14#
1C
0y!
1x!
1p"
1k"
1j"
1i"
1g"
1f"
1e"
1d"
1b"
1a"
1`"
1_"
1]"
1\"
1Z"
1W"
1U"
1T"
1R"
0^
0]
1\
1Q"
0P"
1N"
0I"
0G"
0F"
0E"
0D"
1C"
0@"
1>"
18"
05"
04"
13"
b1100 W#
b1111110000000000000000110000000 X#
1@!
1%!
1e!
#12000
0!
0$
#13000
1!
1$
b1000 ^#
b10100 r"
b1100 [#
b11000110101111011100000011001001 4$
1q"
0p"
1n"
0i"
0g"
0f"
0e"
0d"
1c"
0`"
1^"
1X"
0U"
0T"
1S"
1y!
1T#
16#
0C
1B
0/"
1."
0Q"
0N"
0K"
0J"
0C"
0B"
1@"
0?"
19"
16"
15"
14"
03"
1^
b10000 W#
b1111110000000000000001000000000 X#
0@!
0?!
1>!
0%!
0$!
1#!
0e!
0d!
1c!
#14000
0!
0$
#15000
1!
1$
b10111111101110110000000000000000 4$
b10000 [#
b11000 r"
b1100 ^#
1/"
0T#
1S#
06#
15#
1C
0y!
0x!
1w!
0q"
0n"
0k"
0j"
0c"
0b"
1`"
0_"
1Y"
1V"
1U"
1T"
0S"
0^
1]
0A"
0@"
0>"
0="
0<"
0:"
09"
08"
07"
06"
05"
04"
02"
b10100 W#
b1111110000000000000001010000000 X#
1@!
1%!
1e!
#16000
0!
0$
#17000
1!
1$
b10000 ^#
b11100 r"
b10100 [#
b0 4$
0a"
0`"
0^"
0]"
0\"
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0R"
1y!
1T#
16#
0C
0B
0A
1@
0/"
0."
1-"
1^
b11000 W#
b1111110000000000000001100000000 X#
0@!
1?!
0%!
1$!
0e!
1d!
#18000
0!
0$
#19000
1!
1$
b11000 [#
b100000 r"
b10100 ^#
1/"
0T#
0S#
0R#
1Q#
06#
05#
04#
13#
1C
0y!
1x!
0^
0]
0\
1[
b11100 W#
b1111110000000000000001110000000 X#
1@!
1%!
1e!
#20000
0!
0$
